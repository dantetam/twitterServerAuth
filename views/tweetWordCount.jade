h1 Twitter Word Count
div(id="wrapper")
  p This is an endpoint to test the word importance visualization, in d3.js rendered beautifully in the browser.
button(id="saveButton") Save Visualization
div(id="chart")

script(src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js")
script(src="//cdnjs.cloudflare.com/ajax/libs/d3/3.4.11/d3.min.js")
script(src="/js/lib/cloud.js")
script(src="/js/lib/svgsave/canvas-toBlob.js")
script(src="/js/lib/svgsave/FileSaver.min.js")
script(src="/js/lib/svgsave/svgsave.js")

style.
  body {
    font-family: "Arial";
  }

script.
  var wordCounts = !{wordCounts}; //Stringified JSON turned back into object
  var wordDictionary = {}; //Convert list of sorted word count entries into a word count dictionary
  //For the purpose of this visualization, transform the data by ln(x), for a more visually informative log-linear data space (i.e. closer together in magnitude).
  for (var entry of wordCounts) {
    wordDictionary[entry[0]] = +Math.log(entry[1]);
  }
  
  var svgId = "#chart";
  var width = $(document).width();
  var height = $(document).height();

  var fill = d3.scale.category20();

  var wordEntries = d3.entries(wordDictionary);

  var xScale = d3.scale.linear()
     .domain([0, d3.max(wordEntries, function(d) {
        return d.value;
      })
     ])
     .range([10,100]);

  d3.layout.cloud().size([width, height])
    .timeInterval(20)
    .words(wordEntries)
    .fontSize(function(d) { return xScale(+d.value); })
    .text(function(d) { return d.key; })
    .rotate(function() { return (Math.random() * 2 - 1) * 20; })
    .font("Arial")
    .on("end", draw)
    .start();

  function draw(words) {
    d3.select(svgId).append("svg")
        .attr("id", "wordCloudChart")
        .attr("width", width)
        .attr("height", height)
      .append("g")
        .attr("transform", "translate(" + [width / 2, height / 2] + ")")
      .selectAll("text")
        .data(words)
      .enter().append("text")
        .style("font-size", function(d) { return xScale(d.value) + "px"; })
        .style("font-family", "Impact")
        .style("fill", function(d, i) { return fill(i); })
        .attr("text-anchor", "middle")
        .attr("transform", function(d) {
          return "translate(" + [d.x, d.y] + ")rotate(" + d.rotate + ")";
        })
        .text(function(d) { return d.key; });
  }

  console.log(wordCounts);

  d3.layout.cloud().stop();

  // Set-up the export button; this uses the file svgsave.js, a utility library
  // for converting d3.js visualizations into usable image filess
  d3.select('#saveButton').on('click', function(){
      var svg = d3.select("#wordCloudChart");
      var svgString = getSVGString(svg.node());
      svgString2Image( svgString, 2*width, 2*height, 'png', save ); // passes Blob and filesize String to the callback

      //Get the current date as a conveniently formatted string
      //One line sourced from 
      //https://stackoverflow.com/questions/12409299/how-to-get-current-formatted-date-dd-mm-yyyy-in-javascript-and-append-it-to-an-i#answer-12409344
      var formattedDateString = new Date(Date.now()).toLocaleString();

      function save( dataBlob, filesize ){
          saveAs( dataBlob, 'tweetWordCloud_' + formattedDateString + '.png' ); // FileSaver.js function
      }
  });
